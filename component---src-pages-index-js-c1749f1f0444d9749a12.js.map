{"version":3,"sources":["webpack:///./src/assets/images/backend-frontend.jpg","webpack:///./src/components/Banner.js","webpack:///./src/components/FeaturedBlogPosts.js","webpack:///./src/components/FeaturedPortfolioItems.js","webpack:///./src/components/About.js","webpack:///./src/pages/index.js","webpack:///./src/assets/images/profile.jpeg","webpack:///./src/pages/blog.js"],"names":["module","exports","Banner","props","Section","img","id","className","src","profile","alt","ContactIcons","href","styled","section","FeaturedBlogPosts","posts","defaultImage","to","length","div","FeaturedPortfolioItems","items","defaults","nodes","map","item","i","screenshots","formats","medium","childImageSharp","fluid","postImage","publichURL","key","name","style","backgroundImage","route","source","cardText","About","strapiSiteInfo","post","about","title","Home","data","console","log","description","hero","pageQuery","PostsList","PostList","strapiId","PostSynopsis","BlogIndex","siteTitle","site","siteName","location","ul","srcSet","image","defaultSrcSet","PostCardWrapper","Header","date","synopsis","header"],"mappings":"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","file":"component---src-pages-index-js-c1749f1f0444d9749a12.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/backend-frontend-ed27e10ca3169e060cb92d5911348003.jpg\";","import React from 'react';\nimport { ContactIcons } from './ContactIcons';\nimport profile from '../assets/images/profile.jpeg';\nimport styled from 'styled-components';\n\nconst Banner = props => (\n  <Section img={props.img} id=\"banner\" className=\"major\">\n    <div className=\"inner\">\n      <div className=\"banner-wrapper\">\n        <div className=\"profile-wrapper\">\n          <img className=\"profile-picture\" src={profile} alt=\"profile\" />\n        </div>\n\n        <div>\n          <header className=\"major\">\n            <h1>I'm Jared, a Frontend Developer</h1>\n          </header>\n\n          <div className=\"content\">\n            <div>\n              <p>\n                <strike>\n                  I focus on elegant, clean and efficient code, blah blah...\n                </strike>\n                <br />\n                Let's cut the BS. I balance functionality, learning and getting\n                things done.\n              </p>\n              <ContactIcons className=\"reset\" />\n            </div>\n            <ul className=\"actions\">\n              <li>\n                <a href=\"#one\" className=\"button next scrolly\">\n                  View My Work\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Section>\n);\n\nexport default Banner;\n\nconst Section = styled.section`\n  background: url(${({ img }) => img}) no-repeat center center fixed;\n  background-size: cover;\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport { PostsList } from '../pages/blog';\n\nexport function FeaturedBlogPosts({ posts = [], defaultImage }) {\n  return (\n    <Section>\n      <Link to=\"/blog\" className=\"align-center\">\n        <h2 className=\"section-title\">Recent Blog Posts</h2>\n      </Link>\n\n      {posts.length && <PostsList posts={posts} defaultImage={defaultImage} />}\n    </Section>\n  );\n}\n\nconst Section = styled.div`\n  padding: 20px 20px 40px;\n`;\n","import React from 'react';\nimport { graphql, useStaticQuery, Link } from 'gatsby';\nimport ReactMarkdown from 'react-markdown';\n\nexport default function FeaturedPortfolioItems() {\n  const { items, defaults } = useStaticQuery(graphql`\n    query PORTFOLIO_ITEMS {\n      defaults: strapiDefaults {\n        postImage {\n          publicURL\n        }\n      }\n      items: allStrapiPortfolioItem(filter: { featured: { eq: true } }) {\n        nodes {\n          name\n          route\n          cardText\n          screenshots {\n            url\n            formats {\n              medium {\n                childImageSharp {\n                  fluid {\n                    src\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <section id=\"one\" className=\"tiles\">\n      {items?.nodes?.map((item, i) => {\n        const img =\n          item?.screenshots?.[0].formats.medium.childImageSharp.fluid.src ||\n          defaults.postImage.publichURL;\n\n        return (\n          <article\n            key={i + item?.name}\n            style={{ backgroundImage: `url(${img})` }}\n          >\n            <Link to={item.route} className=\"tile__link\">\n              <header className=\"major\">\n                <h3>{item.name}</h3>\n              </header>\n              <ReactMarkdown source={item.cardText} className=\"tile__content\" />\n            </Link>\n          </article>\n        );\n      })}\n    </section>\n  );\n}\n","/* eslint-disable */\nimport React from 'react';\nimport { graphql, Link, useStaticQuery } from 'gatsby';\nimport ReactMarkdown from 'react-markdown';\n\nexport default function About() {\n  const { strapiSiteInfo, post } = useStaticQuery(graphql`\n    query {\n      strapiSiteInfo {\n        about\n        email\n        siteName\n      }\n      post: strapiBlogPosts(title: { glob: \"How I Got Started\" }) {\n        title\n        route\n      }\n    }\n  `);\n  return (\n    <div className=\"inner\">\n      <header className=\"major\">\n        <h2>About Me</h2>\n      </header>\n      <ReactMarkdown source={strapiSiteInfo.about} />\n\n      <ul className=\"actions\">\n        <li>\n          <Link to={post.route} className=\"button next\">\n            {post.title}\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","/* eslint-disable */\nimport React from 'react';\nimport SEO from '../components/seo';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport Banner from '../components/Banner';\nimport { FeaturedBlogPosts } from '../components/FeaturedBlogPosts';\nimport FeaturedPortfolioItems from '../components/FeaturedPortfolioItems';\nimport About from '../components/About';\nimport hero from '../assets/images/backend-frontend.jpg';\n\nexport default function Home(props) {\n  const { data } = props;\n  console.log({ props });\n  return (\n    <Layout>\n      <SEO title=\"cjaredm - Frontend Developer\" description=\"\" />\n      <Banner img={hero} />\n\n      <FeaturedBlogPosts\n        posts={data?.posts?.nodes}\n        defaultImage={data?.defaults?.postImage}\n      />\n\n      <div id=\"main\">\n        <FeaturedPortfolioItems />\n\n        <section id=\"two\">\n          <About />\n        </section>\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query {\n    strapiSiteInfo {\n      about\n      email\n      siteName\n    }\n\n    defaults: strapiDefaults {\n      postImage {\n        publicURL\n        childImageSharp {\n          fluid {\n            srcSet\n          }\n        }\n      }\n    }\n\n    posts: allStrapiBlogPosts(\n      limit: 3\n      sort: { order: DESC, fields: created_at }\n    ) {\n      nodes {\n        id\n        strapiId\n        route\n        title\n        synopsis\n        date(formatString: \"MMMM DD, yyyy\")\n        image {\n          childImageSharp {\n            fluid {\n              srcSet\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","module.exports = __webpack_public_path__ + \"static/profile-e170a72ab0ca43fbfc3ab48a5988a569.jpeg\";","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nfunction BlogIndex(props) {\n  const { data } = props;\n  const siteTitle = data?.site?.siteName;\n  const posts = data.posts.nodes;\n  const defaultImage = data?.defaults?.postImage;\n\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <SEO title=\"Dev Blog\" description=\"\" />\n      <h1 className=\"section-title\">{`<Dev Blog />`}</h1>\n      <PostsList posts={posts} defaultImage={defaultImage} />\n    </Layout>\n  );\n}\n\nexport default BlogIndex;\n\nexport function PostsList({ posts = [], defaultImage }) {\n  return posts.length ? (\n    <PostList>\n      {posts.map(post => {\n        return (\n          <li key={post.route + post.strapiId}>\n            <PostSynopsis post={post} defaultImage={defaultImage} />\n          </li>\n        );\n      })}\n    </PostList>\n  ) : null;\n}\n\nexport const pageQuery = graphql`\n  query {\n    site: strapiSiteInfo {\n      about\n      email\n      siteName\n    }\n\n    defaults: strapiDefaults {\n      postImage {\n        publicURL\n        childImageSharp {\n          fluid {\n            srcSet\n          }\n        }\n      }\n    }\n\n    posts: allStrapiBlogPosts(sort: { order: DESC, fields: created_at }) {\n      nodes {\n        id\n        strapiId\n        title\n        route\n        synopsis\n        date(formatString: \"MMMM DD, yyyy\")\n        image {\n          publicURL\n          childImageSharp {\n            fluid {\n              srcSet\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst PostList = styled.ul`\n  margin: 0 auto;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  display: grid;\n  grid-gap: 20px;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n\n  @media (min-width: 756px) {\n    grid-gap: 40px;\n    margin: 0 auto;\n  }\n\n  li {\n    list-style: none;\n    margin: 0 auto;\n    padding: 0;\n  }\n`;\n\nexport function PostSynopsis({ post, defaultImage }) {\n  const srcSet = post?.image?.childImageSharp?.fluid?.srcSet;\n  const defaultSrcSet = defaultImage?.childImageSharp?.fluid?.srcSet;\n  return (\n    <Link to={post.route} key={post.strapiId}>\n      <PostCardWrapper>\n        <img\n          className=\"post-car__img\"\n          src=\"\"\n          srcSet={srcSet || defaultSrcSet}\n          alt=\"\"\n        />\n        <Header className=\"major\">\n          <h2>{post.title}</h2>\n        </Header>\n        <time>{post.date}</time>\n        <p>{post.synopsis}</p>\n      </PostCardWrapper>\n    </Link>\n  );\n}\n\nconst Header = styled.header`\n  margin-bottom: 0 !important;\n`;\n\nconst PostCardWrapper = styled.div`\n  width: auto;\n  height: 100%;\n  flex: 1;\n  border-radius: 5px;\n  margin: 0 20px 20px;\n  padding: 20px;\n  transition: transform 500ms;\n\n  @media (min-width: 756px) {\n  }\n\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 2px 3px 6px black;\n  }\n\n  .post-car__img {\n    object-fit: cover;\n    width: 100%;\n    height: 200px;\n  }\n\n  time {\n    font-size: 14px;\n  }\n`;\n"],"sourceRoot":""}