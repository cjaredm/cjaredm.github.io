{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/utils/typography.js","webpack:///./src/components/NextPrevPosts.js","webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Header.js","webpack:///./src/components/Menu.js","webpack:///./src/components/Footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/ContactIcons.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["SEO","_ref","description","lang","meta","keywords","title","site","_2417117884","data","metaDescription","siteMetadata","react_default","a","createElement","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","rhythm","scale","NextPrevPosts","previous","next","PrevNextWrapper","gatsby_browser_entry","to","fields","slug","rel","frontmatter","styled","ul","withConfig","displayName","componentId","BlogPostTemplate","render","post","this","props","markdownRemark","siteTitle","_this$props$pageConte","pageContext","layout","location","Wrapper","seo","excerpt","blog_post_Date","date","dangerouslySetInnerHTML","__html","html","HR","React","Component","pageQuery","div","hr","Date","p","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","createContext","m","module","exports","require","default","Header","id","className","onClick","onToggleMenu","Menu","Footer","ContactIcons","A","href","Layout","_this","_React$Component","call","state","isMenuVisible","loading","handleToggleMenu","bind","_assertThisInitialized","componentDidMount","_this2","timeoutId","setTimeout","setState","componentWillUnmount","clearTimeout","children","components_Header","components_Footer","components_Menu","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"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","file":"component---src-templates-blog-post-js-ebe5ccf59c4a01d2333b.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import Typography from 'typography';\nimport Wordpress2016 from 'typography-theme-wordpress-2016';\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n  };\n};\n\ndelete Wordpress2016.googleFonts;\n\nconst typography = new Typography(Wordpress2016);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nexport function NextPrevPosts({ previous, next }) {\n  return (\n    <PrevNextWrapper>\n      <li>\n        {previous && (\n          <Link to={previous.fields.slug} rel=\"prev\">\n            ← {previous.frontmatter.title}\n          </Link>\n        )}\n      </li>\n      <li>\n        {next && (\n          <Link to={next.fields.slug} rel=\"next\">\n            {next.frontmatter.title} →\n          </Link>\n        )}\n      </li>\n    </PrevNextWrapper>\n  );\n}\n\nconst PrevNextWrapper = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  list-style: none;\n  padding: 0;\n`;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { rhythm } from '../utils/typography';\nimport { NextPrevPosts } from '../components/NextPrevPosts';\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = this.props.data.site.siteMetadata.title;\n    const { previous, next } = this.props.pageContext;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <Wrapper>\n          <SEO title={post.frontmatter.title} description={post.excerpt} />\n          <h1>{post.frontmatter.title}</h1>\n          <Date>{post.frontmatter.date}</Date>\n\n          <div dangerouslySetInnerHTML={{ __html: post.html }} />\n\n          <HR />\n\n          <NextPrevPosts next={next} previous={previous} />\n        </Wrapper>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`;\n\nconst Wrapper = styled.div`\n  padding: 1em 0 1em 0;\n  margin: 0 auto;\n  max-width: 65em;\n  width: calc(100% - 6em);\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    margin: 0;\n  }\n  img {\n    display: block;\n    margin: 0 auto;\n  }\n`;\n\nconst HR = styled.hr`\n  border-bottom: solid 1px white;\n`;\n\nconst Date = styled.p`\n  display: block;\n  margin: 10px 0 ${rhythm(1)} 0;\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nconst Header = props => (\n  <header id=\"header\" className=\"alt\">\n    <Link to=\"/\" className=\"logo\">\n      <strong>cJaredm</strong> <span>Frontend Developer</span>\n    </Link>\n\n    <nav>\n      <a className=\"menu-link\" onClick={props.onToggleMenu}>\n        Menu\n      </a>\n    </nav>\n  </header>\n);\n\nHeader.propTypes = {\n  onToggleMenu: PropTypes.func,\n};\n\nexport default Header;\n","/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nconst Menu = props => (\n  <nav id=\"menu\">\n    <div className=\"inner\">\n      <ul className=\"links\">\n        <li>\n          <Link onClick={props.onToggleMenu} to=\"/\">\n            Home\n          </Link>\n        </li>\n        {/*<li>\n          <Link onClick={props.onToggleMenu} to=\"/landing\">\n            Resume\n          </Link>\n        </li>\n        */}\n        <li>\n          <Link onClick={props.onToggleMenu} to=\"/portfolio\">\n            Portfolio\n          </Link>\n        </li>\n        <li>\n          <Link onClick={props.onToggleMenu} to=\"/blog\">\n            Blog\n          </Link>\n        </li>\n      </ul>\n    </div>\n    <a className=\"close\" onClick={props.onToggleMenu}>\n      Close\n    </a>\n  </nav>\n);\n\nMenu.propTypes = {\n  onToggleMenu: PropTypes.func,\n};\n\nexport default Menu;\n","import React from 'react';\nimport { ContactIcons } from './ContactIcons';\nimport styled from 'styled-components';\n\nconst Footer = props => (\n  <footer id=\"footer\">\n    <div className=\"inner\">\n      <ContactIcons />\n\n      <ul className=\"copyright\">\n        <li>&copy; cJaredm</li>\n        <li>\n          GatsbyTheme: <A href=\"https://html5up.net\">HTML5 UP</A>\n        </li>\n      </ul>\n    </div>\n  </footer>\n);\n\nexport default Footer;\n\nconst A = styled.a`\n  box-shadow: 0 0 0 0;\n`;\n","import React from 'react';\nimport Header from './Header';\nimport Menu from './Menu';\nimport Footer from './Footer';\nimport '../assets/scss/main.scss';\n\nclass Layout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMenuVisible: false,\n      loading: 'is-loading',\n    };\n    this.handleToggleMenu = this.handleToggleMenu.bind(this);\n  }\n\n  componentDidMount() {\n    this.timeoutId = setTimeout(() => {\n      this.setState({ loading: '' });\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n    }\n  }\n\n  handleToggleMenu() {\n    this.setState({\n      isMenuVisible: !this.state.isMenuVisible,\n    });\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div\n        className={`body ${this.state.loading} ${\n          this.state.isMenuVisible ? 'is-menu-visible' : ''\n        }`}\n      >\n        <div id=\"wrapper\">\n          <Header onToggleMenu={this.handleToggleMenu} /> {children} <Footer />\n        </div>\n        <Menu onToggleMenu={this.handleToggleMenu} />\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport function ContactIcons({ className }) {\n  return (\n    <ul className={`icons ${className}`}>\n      <li>\n        <A\n          href=\"https://twitter.com/cjaredm\"\n          className=\"icon alt fa-twitter\"\n          title=\"Twitter\"\n        >\n          <span className=\"label\">Twitter</span>{' '}\n        </A>\n      </li>\n      <li>\n        <A\n          href=\"https://github.com/cjaredm\"\n          className=\"icon alt fa-github\"\n          title=\"GitHub\"\n        >\n          <span className=\"label\">GitHub</span>{' '}\n        </A>\n      </li>\n      <li>\n        <A\n          href=\"https://www.linkedin.com/in/cjaredm/\"\n          className=\"icon alt fa-linkedin\"\n          title=\"LinkedIn\"\n        >\n          {' '}\n          <span className=\"label\">LinkedIn</span>{' '}\n        </A>\n      </li>\n\n      <li>\n        <A\n          href=\"mailto:cjaredm@protonmail.com\"\n          className=\"icon alt fa-envelope\"\n          title=\"cjaredm@protonmail.com\"\n        >\n          <span className=\"label\">Email</span>{' '}\n        </A>\n      </li>\n    </ul>\n  );\n}\n\nconst A = styled.a`\n  box-shadow: 0 0 0 0;\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}