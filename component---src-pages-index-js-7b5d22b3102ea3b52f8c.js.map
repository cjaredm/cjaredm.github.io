{"version":3,"sources":["webpack:///./src/assets/images/backend-frontend.jpg","webpack:///./src/components/Banner.js","webpack:///./src/components/FeaturedBlogPosts.js","webpack:///./src/components/FeaturedPortfolioItems.js","webpack:///./src/components/About.js","webpack:///./src/pages/index.js","webpack:///./src/assets/images/profile.jpeg","webpack:///./src/pages/blog.js"],"names":["module","exports","Banner","props","Section","img","id","className","src","profile","alt","ContactIcons","href","styled","section","FeaturedBlogPosts","posts","defaultImage","to","length","div","FeaturedPortfolioItems","items","defaults","nodes","map","item","i","screenshot","childImageSharp","fluid","publicURL","postImage","publichURL","key","name","style","backgroundImage","route","source","cardText","About","strapiSiteInfo","post","about","title","Home","data","description","hero","pageQuery","BlogIndex","siteTitle","site","siteName","location","PostsList","PostListWrapper","strapiId","PostSynopsis","ul","srcSet","image","defaultSrcSet","PostCardWrapper","Header","date","synopsis","header"],"mappings":"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","file":"component---src-pages-index-js-7b5d22b3102ea3b52f8c.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/backend-frontend-ed27e10ca3169e060cb92d5911348003.jpg\";","import React from 'react';\nimport { ContactIcons } from './ContactIcons';\nimport profile from '../assets/images/profile.jpeg';\nimport styled from 'styled-components';\n\nconst Banner = props => (\n  <Section img={props.img} id=\"banner\" className=\"major\">\n    <div className=\"inner\">\n      <div className=\"banner-wrapper\">\n        <div className=\"profile-wrapper\">\n          <img className=\"profile-picture\" src={profile} alt=\"profile\" />\n        </div>\n\n        <div>\n          <header className=\"major\">\n            <h1>I'm Jared, a Frontend Developer</h1>\n          </header>\n\n          <div className=\"content\">\n            <div>\n              <p>\n                <strike>\n                  I focus on elegant, clean and efficient code, blah blah...\n                </strike>\n                <br />\n                Let's cut the BS. I balance functionality, learning and getting\n                things done.\n              </p>\n              <ContactIcons className=\"reset\" />\n            </div>\n            <ul className=\"actions\">\n              <li>\n                <a href=\"#one\" className=\"button next scrolly\">\n                  View My Work\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Section>\n);\n\nexport default Banner;\n\nconst Section = styled.section`\n  background: url(${({ img }) => img}) no-repeat center center fixed;\n  background-size: cover;\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport { PostsList } from '../pages/blog';\n\nexport function FeaturedBlogPosts({ posts = [], defaultImage }) {\n  return (\n    <Section>\n      <Link to=\"/blog\" className=\"align-center\">\n        <h2 className=\"section-title\">Recent Blog Posts</h2>\n      </Link>\n\n      {posts.length && <PostsList posts={posts} defaultImage={defaultImage} />}\n    </Section>\n  );\n}\n\nconst Section = styled.div`\n  padding: 20px 20px 40px;\n`;\n","import React from 'react';\nimport { graphql, useStaticQuery, Link } from 'gatsby';\nimport ReactMarkdown from 'react-markdown';\n\nexport default function FeaturedPortfolioItems() {\n  const { items, defaults } = useStaticQuery(graphql`\n    query PORTFOLIO_ITEMS {\n      defaults: strapiDefaults {\n        postImage {\n          publicURL\n        }\n      }\n      items: allStrapiPortfolioItem(filter: { featured: { eq: true } }) {\n        nodes {\n          name\n          route\n          cardText\n          screenshot {\n            publicURL\n            childImageSharp {\n              fluid {\n                src\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  if (!items?.nodes.length) return null;\n  return (\n    <section id=\"one\" className=\"tiles\">\n      {items?.nodes?.map((item, i) => {\n        const img =\n          item?.screenshot?.childImageSharp?.fluid?.src ||\n          item?.screenshot?.publicURL ||\n          defaults.postImage.publichURL;\n\n        return (\n          <article\n            key={i + item?.name}\n            style={{ backgroundImage: `url(${img})` }}\n          >\n            <Link to={item.route} className=\"tile__link\">\n              <header className=\"major\">\n                <h3>{item.name}</h3>\n              </header>\n              <ReactMarkdown source={item.cardText} className=\"tile__content\" />\n            </Link>\n          </article>\n        );\n      })}\n    </section>\n  );\n}\n","/* eslint-disable */\nimport React from 'react';\nimport { graphql, Link, useStaticQuery } from 'gatsby';\nimport ReactMarkdown from 'react-markdown';\n\nexport default function About() {\n  const { strapiSiteInfo, post } = useStaticQuery(graphql`\n    query {\n      strapiSiteInfo {\n        about\n        email\n        siteName\n      }\n      post: strapiBlogPosts(title: { glob: \"How I Got Started\" }) {\n        title\n        route\n      }\n    }\n  `);\n  return (\n    <div className=\"inner\">\n      <header className=\"major\">\n        <h2>About Me</h2>\n      </header>\n      <ReactMarkdown source={strapiSiteInfo.about} />\n\n      <ul className=\"actions\">\n        <li>\n          <Link to={post.route} className=\"button next\">\n            {post.title}\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","/* eslint-disable */\nimport React from 'react';\nimport SEO from '../components/seo';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport Banner from '../components/Banner';\nimport { FeaturedBlogPosts } from '../components/FeaturedBlogPosts';\nimport FeaturedPortfolioItems from '../components/FeaturedPortfolioItems';\nimport About from '../components/About';\nimport hero from '../assets/images/backend-frontend.jpg';\n\nexport default function Home(props) {\n  const { data } = props;\n  return (\n    <Layout>\n      <SEO title=\"cjaredm - Frontend Developer\" description=\"\" />\n      <Banner img={hero} />\n\n      <FeaturedBlogPosts\n        posts={data?.posts?.nodes}\n        defaultImage={data?.defaults?.postImage}\n      />\n\n      <div id=\"main\">\n        <FeaturedPortfolioItems />\n\n        <section id=\"two\">\n          <About />\n        </section>\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query {\n    strapiSiteInfo {\n      about\n      email\n      siteName\n    }\n\n    defaults: strapiDefaults {\n      postImage {\n        publicURL\n        childImageSharp {\n          fluid {\n            srcSet\n          }\n        }\n      }\n    }\n\n    posts: allStrapiBlogPosts(\n      limit: 3\n      sort: { order: DESC, fields: created_at }\n      filter: { published: { eq: true } }\n    ) {\n      nodes {\n        id\n        strapiId\n        route\n        title\n        synopsis\n        date(formatString: \"MMMM DD, yyyy\")\n        image {\n          childImageSharp {\n            fluid {\n              srcSet\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","module.exports = __webpack_public_path__ + \"static/profile-e170a72ab0ca43fbfc3ab48a5988a569.jpeg\";","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nfunction BlogIndex(props) {\n  const { data } = props;\n  const siteTitle = data?.site?.siteName;\n  const posts = data.posts.nodes;\n  const defaultImage = data?.defaults?.postImage;\n\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <SEO title=\"Dev Blog\" description=\"\" />\n      <h1 className=\"section-title\">{`<Dev Blog />`}</h1>\n      <PostsList posts={posts} defaultImage={defaultImage} />\n    </Layout>\n  );\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site: strapiSiteInfo {\n      about\n      email\n      siteName\n    }\n\n    defaults: strapiDefaults {\n      postImage {\n        publicURL\n        childImageSharp {\n          fluid {\n            srcSet\n          }\n        }\n      }\n    }\n\n    posts: allStrapiBlogPosts(sort: { order: DESC, fields: created_at }) {\n      nodes {\n        id\n        strapiId\n        title\n        route\n        synopsis\n        date(formatString: \"MMMM DD, yyyy\")\n        image {\n          publicURL\n          childImageSharp {\n            fluid {\n              srcSet\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport function PostsList({ posts = [], defaultImage }) {\n  return posts.length ? (\n    <PostListWrapper>\n      {posts.map(post => {\n        return (\n          <li key={post.route + post.strapiId}>\n            <PostSynopsis post={post} defaultImage={defaultImage} />\n          </li>\n        );\n      })}\n    </PostListWrapper>\n  ) : null;\n}\n\nconst PostListWrapper = styled.ul`\n  max-width: 1140px;\n  margin: 0 auto 50px;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  display: grid;\n  grid-gap: 20px;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n\n  @media (min-width: 756px) {\n    grid-gap: 40px;\n  }\n\n  li {\n    list-style: none;\n    margin: 0 auto;\n    padding: 0;\n  }\n`;\n\nexport function PostSynopsis({ post, defaultImage }) {\n  const srcSet = post?.image?.childImageSharp?.fluid?.srcSet;\n  const defaultSrcSet = defaultImage?.childImageSharp?.fluid?.srcSet;\n  return (\n    <Link to={post.route} key={post.strapiId}>\n      <PostCardWrapper>\n        <img\n          className=\"post-car__img\"\n          src=\"\"\n          srcSet={srcSet || defaultSrcSet}\n          alt=\"\"\n        />\n        <Header className=\"major\">\n          <h2>{post.title}</h2>\n        </Header>\n        <time>{post.date}</time>\n        <p>{post.synopsis}</p>\n      </PostCardWrapper>\n    </Link>\n  );\n}\n\nconst Header = styled.header`\n  margin-bottom: 0 !important;\n`;\n\nconst PostCardWrapper = styled.div`\n  width: auto;\n  height: 100%;\n  flex: 1;\n  border-radius: 5px;\n  margin: 0 20px 20px;\n  padding: 20px;\n  transition: transform 500ms;\n\n  @media (min-width: 756px) {\n  }\n\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 2px 3px 6px black;\n  }\n\n  .post-car__img {\n    object-fit: cover;\n    width: 100%;\n    height: 200px;\n  }\n\n  time {\n    font-size: 14px;\n  }\n`;\n"],"sourceRoot":""}