{"version":3,"sources":["webpack:///./src/components/Hero.js","webpack:///./src/pages/portfolio.js","webpack:///./src/components/seo.js"],"names":["Hero","imgUrl","name","content","defaults","img","postImage","childImageSharp","fluid","src","Section","id","className","styled","section","Portfolio","props","data","title","description","items","nodes","map","itemProps","PortfolioSection","key","defaultSrcSet","srcSet","pageQuery","route","cardText","imageSrcSet","to","alt","SEO","lang","meta","keywords","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","property","author","concat","length","join","defaultProps"],"mappings":"+IAsCeA,IAlCF,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACpBC,EADkC,OAClCA,SAeFC,EAAMJ,GAAUG,EAASE,UAAUC,gBAAgBC,MAAMC,IAC/D,OACE,kBAACC,EAAD,CAAST,OAAQI,EAAKM,GAAG,SAASC,UAAS,SACzC,yBAAKA,UAAU,SACb,yBAAKA,UAAU,kBACb,6BACE,4BAAQA,UAAU,SAChB,4BAAKV,IAGP,yBAAKU,UAAU,WAAWT,QAUtC,IAAMO,EAAUG,IAAOC,QAAV,mEAAGD,CAAH,yGACO,qBAAGZ,W,kOCnCR,SAASc,EAAUC,GAAQ,IAAD,IAC/BC,EAASD,EAATC,KACR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAM,sBACNC,YAAY,6CAGd,kBAAC,IAAD,CACEjB,KAAK,iBACLC,QAAQ,kHAGV,yBAAKQ,GAAG,QACN,6BAASA,GAAG,MAAMC,UAAU,cACzBK,SADH,UACGA,EAAMG,aADT,iBACG,EAAaC,aADhB,aACG,EAAoBC,KAAI,SAAAC,GAAS,mBAChC,kBAACC,EAAD,eACEC,IAAKF,EAAUrB,MACXqB,EAFN,CAGEG,cACET,SADW,UACXA,EAAMb,gBADK,iBACX,EAAgBE,iBADL,iBACX,EAA2BC,uBADhB,iBACX,EAA4CC,aADjC,aACX,EAAmDmB,gBAU5D,IAAMC,EAAS,aA0CtB,SAASJ,EAAT,GAAqE,IAAD,IAAxCK,EAAwC,EAAxCA,MAAO3B,EAAiC,EAAjCA,KAAM4B,EAA2B,EAA3BA,SAAUzB,EAAiB,EAAjBA,IACzCqB,E,oIAD0D,sCAC1DA,cACFK,EAAc1B,SAAH,UAAGA,EAAKE,uBAAR,iBAAG,EAAsBC,aAAzB,aAAG,EAA6BmB,OAEjD,OACE,iCACE,yBAAKf,UAAU,kCACb,kBAAC,OAAD,CAAMoB,GAAIH,GACR,yBAAKjB,UAAU,QAAQe,OAAQI,GAAeL,EAAeO,IAAI,OAGrE,yBAAKrB,UAAU,WACb,yBAAKA,UAAU,SACb,4BAAQA,UAAU,SAChB,4BAAKV,IAEP,2BAAI4B,GACJ,wBAAIlB,UAAU,WACZ,4BACE,kBAAC,OAAD,CAAMoB,GAAIH,EAAOjB,UAAU,UAA3B,qB,o7BCtFd,SAASsB,EAAT,GAA4D,IAA7Cf,EAA4C,EAA5CA,YAAagB,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,SAAUnB,EAAS,EAATA,MACxCoB,EADiD,OACjDA,KAcFC,EAAkBpB,GAAemB,EAAKE,aAAarB,YAEzD,OACE,kBAAC,IAAD,CACEsB,eAAgB,CACdN,QAEFjB,MAAOA,EACPwB,cAAa,QAAUJ,EAAKE,aAAatB,MACzCkB,KAAM,CACJ,CACElC,KAAK,cACLC,QAASoC,GAEX,CACEI,SAAS,WACTxC,QAASe,GAEX,CACEyB,SAAS,iBACTxC,QAASoC,GAEX,CACEI,SAAS,UACTxC,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASmC,EAAKE,aAAaI,QAE7B,CACE1C,KAAK,gBACLC,QAASe,GAEX,CACEhB,KAAK,sBACLC,QAASoC,IAGVM,OACCR,EAASS,OAAS,EACd,CACE5C,KAAK,WACLC,QAASkC,EAASU,KAAT,OAEX,IAELF,OAAOT,KAKhBF,EAAIc,aAAe,CACjBb,KAAK,KACLC,KAAM,GACNC,SAAU,GACVlB,YAAY,IAWCe","file":"component---src-pages-portfolio-js-8c9e72b1de5eaff60b76.js","sourcesContent":["import React from 'react';\nimport { useStaticQuery } from 'gatsby';\nimport styled from 'styled-components';\n\nconst Hero = ({ imgUrl, name, content }) => {\n  const { defaults } = useStaticQuery(graphql`\n    query {\n      defaults: strapiDefaults {\n        postImage {\n          childImageSharp {\n            fluid {\n              src\n              srcSet\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const img = imgUrl || defaults.postImage.childImageSharp.fluid.src;\n  return (\n    <Section imgUrl={img} id=\"banner\" className={`major`}>\n      <div className=\"inner\">\n        <div className=\"banner-wrapper\">\n          <div>\n            <header className=\"major\">\n              <h1>{name}</h1>\n            </header>\n\n            <div className=\"content\">{content}</div>\n          </div>\n        </div>\n      </div>\n    </Section>\n  );\n};\n\nexport default Hero;\n\nconst Section = styled.section`\n  background: url(${({ imgUrl }) => imgUrl}) no-repeat center center fixed;\n  background-size: cover;\n  min-height: auto !important;\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport SEO from '../components/seo';\nimport Layout from '../components/layout';\nimport Hero from '../components/Hero';\n\nexport default function Portfolio(props) {\n  const { data } = props;\n  return (\n    <Layout>\n      <SEO\n        title=\"cjaredm - Portfolio\"\n        description=\"Portfolio of coding projects for cJaredm\"\n      />\n\n      <Hero\n        name=\"Code Portfolio\"\n        content=\"This is a short list of the prominent and interesting projects you can browse to learn more about how I code.\"\n      />\n\n      <div id=\"main\">\n        <section id=\"one\" className=\"spotlights\">\n          {data?.items?.nodes?.map(itemProps => (\n            <PortfolioSection\n              key={itemProps.name}\n              {...itemProps}\n              defaultSrcSet={\n                data?.defaults?.postImage?.childImageSharp?.fluid?.srcSet\n              }\n            />\n          ))}\n        </section>\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query {\n    defaults: strapiDefaults {\n      postImage {\n        childImageSharp {\n          fluid {\n            src\n            srcSet\n          }\n        }\n      }\n    }\n    items: allStrapiPortfolioItem {\n      nodes {\n        name\n        route\n        cardText\n        img {\n          childImageSharp {\n            fluid {\n              srcSet\n            }\n          }\n        }\n        screenshots {\n          url\n          formats {\n            medium {\n              childImageSharp {\n                fluid {\n                  src\n                  srcSet\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction PortfolioSection({ route, name, cardText, img, ...props }) {\n  const { defaultSrcSet } = props;\n  const imageSrcSet = img?.childImageSharp?.fluid?.srcSet;\n\n  return (\n    <section>\n      <div className=\"portfolio-section__img-wrapper\">\n        <Link to={route}>\n          <img className=\"image\" srcSet={imageSrcSet || defaultSrcSet} alt=\"\" />\n        </Link>\n      </div>\n      <div className=\"content\">\n        <div className=\"inner\">\n          <header className=\"major\">\n            <h3>{name}</h3>\n          </header>\n          <p>{cardText}</p>\n          <ul className=\"actions\">\n            <li>\n              <Link to={route} className=\"button\">\n                Learn more\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </section>\n  );\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n"],"sourceRoot":""}